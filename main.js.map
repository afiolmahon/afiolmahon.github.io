{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/engine/ThreeCameraController.ts","webpack:///./src/app/engine/ThreeInputHandler.ts","webpack:///./src/app/engine/ThreeMeshInteraction.ts","webpack:///./src/app/engine/action/Action.ts","webpack:///./src/app/engine/action/ActionConstruct.ts","webpack:///./src/app/engine/action/ActionDemolish.ts","webpack:///./src/app/engine/action/ActionHarvest.ts","webpack:///./src/app/engine/action/ActionInfo.ts","webpack:///./src/app/engine/action/ActionPlant.ts","webpack:///./src/app/engine/data/DataPlant.ts","webpack:///./src/app/engine/data/DataTerrain.ts","webpack:///./src/app/engine/data/DataWorld.ts","webpack:///./src/app/engine/entity/Entity.ts","webpack:///./src/app/engine/entity/EntityPlant.ts","webpack:///./src/app/engine/entity/EntityTerrainGrid.ts","webpack:///./src/app/engine/entity/EntityTile.ts","webpack:///./src/app/engine/entity/EntityTileFactory.ts","webpack:///./src/app/engine/entity/EntityTileFarm.ts","webpack:///./src/app/engine/entity/EntityTileTank.ts","webpack:///./src/app/farm.service.ts","webpack:///./src/app/menu-construct/menu-construct.component.css","webpack:///./src/app/menu-construct/menu-construct.component.html","webpack:///./src/app/menu-construct/menu-construct.component.ts","webpack:///./src/app/plant-seed-menu/plant-seed-menu.component.css","webpack:///./src/app/plant-seed-menu/plant-seed-menu.component.html","webpack:///./src/app/plant-seed-menu/plant-seed-menu.component.ts","webpack:///./src/app/tile-detail/tile-detail.component.css","webpack:///./src/app/tile-detail/tile-detail.component.html","webpack:///./src/app/tile-detail/tile-detail.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"canvas {\\n    display: block;\\n}\\n\\n#info {\\n\\tposition: absolute;\\n\\t/* top: 0%; */\\n\\tmargin-top: -3%;\\n\\twidth: 100%;\\n\\t/* text-align: center; */\\n\\t/* z-index: 99; */\\n\\tdisplay:block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0NBQ0Msa0JBQWtCO0NBQ2xCLGFBQWE7Q0FDYixlQUFlO0NBQ2YsV0FBVztDQUNYLHdCQUF3QjtDQUN4QixpQkFBaUI7Q0FDakIsYUFBYTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJjYW52YXMge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4jaW5mbyB7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0LyogdG9wOiAwJTsgKi9cblx0bWFyZ2luLXRvcDogLTMlO1xuXHR3aWR0aDogMTAwJTtcblx0LyogdGV4dC1hbGlnbjogY2VudGVyOyAqL1xuXHQvKiB6LWluZGV4OiA5OTsgKi9cblx0ZGlzcGxheTpibG9jaztcbn0iXX0= */\"","module.exports = \"<div (window:resize)=\\\"onWindowResize($event)\\\" (mousedown)=\\\"inputHandler.onMouseDown($event)\\\"\\n    (mousemove)=\\\"inputHandler.onMouseMove($event)\\\" (mouseup)=\\\"inputHandler.onMouseUp($event)\\\"\\n    (wheel)=\\\"onScroll($event)\\\">\\n    <div id=\\\"info\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"d-flex justify-content-center\\\">\\n                        <div class=\\\"card\\\">\\n                            <div class=\\\"card-body\\\">\\n                                <h5>Grow</h5>\\n                                <p>Money: ${{labelMoney.toFixed(2)}} {{labelDebug}}</p>\\n                                \\n                                <div class=\\\"btn-group btn-group-md\\\" role=\\\"group\\\">\\n                                    <button (click)=\\\"setInteraction('Construct')\\\" class=\\\"btn btn-warning\\\">Build</button>\\n                                    <button (click)=\\\"setInteraction('Demolish')\\\" class=\\\"btn btn-danger\\\">Remove</button>\\n                                    <button (click)=\\\"setInteraction('Plant')\\\" class=\\\"btn btn-success\\\">Plant</button>\\n                                    <button (click)=\\\"setInteraction('Harvest')\\\" class=\\\"btn btn-danger\\\">Harvest</button>\\n                                    <button (click)=\\\"setInteraction('Info')\\\" class=\\\"btn btn-info\\\">Info</button>\\n                                    <button (click)=\\\"actionTimestep()\\\" class=\\\"btn btn-primary\\\">Timestep</button>\\n                                    <button (click)=\\\"setInteraction('None')\\\" class=\\\"btn btn-secondary\\\">Deselect</button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <app-tile-detail [terrain]=\\\"infoTerrain\\\"></app-tile-detail>\\n                    <app-plant-seed-menu [seedList]=\\\"seedList\\\" [plantTargetID]=\\\"plantTargetID\\\" (selectSeed)=\\\"onPlant($event)\\\"></app-plant-seed-menu>\\n                    <app-menu-construct [constructList]=\\\"constructList\\\" [targetID]=\\\"constructTargetID\\\" (selectConstructID)=\\\"onConstruct($event)\\\"></app-menu-construct>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <canvas #canvas (touchstart)=\\\"th.onTouchStart($event)\\\" (touchmove)=\\\"th.onTouchMove($event)\\\"\\n        (touchend)=\\\"th.onTouchEnd($event)\\\"></canvas>\\n</div>\\n<router-outlet></router-outlet>\"","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ActionBase, ActionNone, ActionTimestep } from './engine/action/Action';\nimport { ActionInfo } from './engine/action/ActionInfo';\nimport { ActionHarvest } from './engine/action/ActionHarvest';\nimport { ActionDemolish } from './engine/action/ActionDemolish';\nimport { CameraControler } from './engine/ThreeCameraController';\nimport { WorldData } from './engine/data/DataWorld';\nimport { EntityGrid } from './engine/entity/EntityTerrainGrid';\nimport { InputHandler } from './engine/ThreeInputHandler';\nimport { MeshEvent, MeshInteraction } from './engine/ThreeMeshInteraction';\nimport { FarmService } from './farm.service';\nimport { loadTextureRepeating, TILESIZE } from './engine/entity/Entity';\nimport { DataSeed } from './engine/data/DataPlant';\nimport { Terrain } from './engine/data/DataTerrain';\nimport { ActionConstruct, ActionConstructTargetPlot, buildList } from './engine/action/ActionConstruct';\nimport {\n  MeshLambertMaterial, PlaneBufferGeometry, WebGLRenderer,\n  Color, Scene, PerspectiveCamera, Mesh, HemisphereLight, DirectionalLight\n} from 'three';\nimport { ActionPlant, ActionPlantTargetPlot } from './engine/action/ActionPlant';\n\nconst colorBackground = 0x54A1FF;\nconst colorGround = 0x457a45;\nconst textureGrass = loadTextureRepeating('grass_block_top', 15, 5);\nconst geometryGround = new PlaneBufferGeometry(TILESIZE * 30, TILESIZE * 10);\nconst materialGround = new MeshLambertMaterial({ map: textureGrass, color: colorGround });\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  @ViewChild('canvas') private canvasRef: ElementRef;\n  private renderer: WebGLRenderer;\n\n  // Assets\n  private scene: Scene;\n  private ground: Mesh;\n\n  // Game State Variables\n  public entityGrid: EntityGrid; // 3D ui\n  public labelMoney = undefined;\n  public labelDebug = undefined;\n\n  private cameraControl: CameraControler;\n  private meshInteraction: MeshInteraction;\n  public inputHandler: InputHandler;\n\n  actionActive: ActionBase = new ActionNone();\n\n  lastAnimateTimestamp = 0;\n\n  // Infoview\n  public infoTerrain?: Terrain;\n  // Seedview\n  public plantTargetID?: number;\n  public seedList: DataSeed[];\n  // Constructview\n  public constructTargetID?: number;\n  public constructList = buildList;\n\n  constructor(private fs: FarmService) {\n    this.ground = new Mesh(geometryGround, materialGround);\n    this.ground.frustumCulled = false;\n  }\n\n  /**\n   * Terrain Update handler\n   */\n  onTileAction(tid: number, requestAction: ActionBase): void {\n    this.fs.getWorld().subscribe((world: WorldData) => {\n      const actionResult = requestAction.performAction(tid, world);\n      requestAction.updateUI(actionResult, this);\n    });\n  }\n\n  ngOnInit() {\n    // Load the world from the server\n    this.fs.getWorld().subscribe((world: WorldData) => {\n      this.labelMoney = world.money;\n      this.entityGrid = new EntityGrid(world.terrain, world.sizeX, world.sizeY);\n    });\n    this.createScene();\n    this.startRenderingLoop();\n    // Initialize the cursor-mesh collision handler\n    this.meshInteraction = new MeshInteraction(this.renderer.domElement.clientWidth,\n      this.renderer.domElement.clientHeight,\n      this.cameraControl.camera);\n    // Initialize the mouse/touchscreen input handler\n    this.inputHandler = new InputHandler((x, y) => {\n      return this.meshInteraction.handlePointer(x, y, 'down');\n    }, (x, y) => {\n      return this.meshInteraction.handlePointer(x, y, 'move');\n    }, (dp) => {\n      this.cameraControl.zoom(dp);\n    }, (dx) => {\n      this.cameraControl.dolly(dx);\n    });\n    // Register Mouse Hover handlers for each tile\n    this.entityGrid.tiles.forEach(eventTriggerTile => {\n      this.meshInteraction.registerEvent(new MeshEvent('move', eventTriggerTile.meshSelect, () => {\n        this.entityGrid.tiles.forEach(e => {\n          e.setHovered(eventTriggerTile === e);\n        });\n      }));\n    });\n    // Register Mouse Down handlers for each tile\n    this.entityGrid.tiles.forEach((tile, index) => {\n      this.meshInteraction.registerEvent(new MeshEvent('down', tile.meshSelect, () => {\n        this.onTileAction(index, this.actionActive);\n      }));\n    });\n    // Key event handler\n    document.addEventListener('keyup', (e) => { this.onKeyUp(e.key); });\n  }\n\n  private animate(timestamp): void {\n    const dt = timestamp - this.lastAnimateTimestamp;\n    this.lastAnimateTimestamp = timestamp;\n    this.entityGrid.tiles.forEach(e => e.animate(dt / 1000));\n  }\n\n  public onPlant(seedID: number): void {\n    this.fs.getWorld().subscribe(world => {\n      const action = new ActionPlant(seedID);\n      const result = action.performAction(this.plantTargetID, world);\n      action.updateUI(result, this);\n    });\n  }\n\n  public onConstruct(buildID: number) {\n    this.fs.getWorld().subscribe(world => {\n      const action = new ActionConstruct(buildID);\n      const result = action.performAction(this.constructTargetID, world);\n      action.updateUI(result, this);\n    });\n  }\n\n  private createScene() {\n    this.cameraControl = new CameraControler(new PerspectiveCamera(40, this.getAspectRatio(), 1, 1000));\n    this.scene = new Scene();\n    this.scene.background = new Color(colorBackground);\n    // Setup Lighting\n    const hemiLight = new HemisphereLight(0xffffff, 0x222222, 0.8);\n    hemiLight.position.set(0, 50, 0);\n    this.scene.add(hemiLight);\n    const dirLight = new DirectionalLight(0xffffff, 0.7);\n    dirLight.position.set(1, -1.75, 1);\n    dirLight.position.multiplyScalar(30);\n    this.scene.add(dirLight);\n    const dirLight2 = new DirectionalLight(0xffffff, 0.5);\n    dirLight2.position.set(-30, -10, 30);\n    this.scene.add(dirLight2);\n    // Add geometry to scene\n    this.scene.add(this.ground);\n    this.scene.add(this.entityGrid.gridModel);\n  }\n\n  actionTimestep(): void {\n    this.fs.getWorld().subscribe(world => {\n      const action = new ActionTimestep();\n      world.terrain.forEach((e, index) => {\n        const result = action.performAction(index, world);\n        action.updateUI(result, this);\n      });\n    });\n  }\n\n  setInteraction(act: string): void {\n    this.plantTargetID = undefined;\n    this.constructTargetID = undefined;\n    this.infoTerrain = undefined;\n    if (act === 'Construct') {\n      this.actionActive = new ActionConstructTargetPlot();\n    } else if (act === 'Demolish') {\n      this.actionActive = new ActionDemolish();\n    } else if (act === 'Plant') {\n      this.actionActive = new ActionPlantTargetPlot();\n    } else if (act === 'Harvest') {\n      this.actionActive = new ActionHarvest();\n    } else if (act === 'None') {\n      this.actionActive = new ActionNone();\n    } else if (act === 'Info') {\n      this.actionActive = new ActionInfo();\n    }\n    this.fs.getWorld().subscribe(world => {\n      this.actionActive.onActionSelectUI(world, this);\n    });\n  }\n\n  private get canvas(): HTMLCanvasElement { return this.canvasRef.nativeElement; }\n\n  private startRenderingLoop() {\n    this.renderer = new WebGLRenderer({ canvas: this.canvas, antialias: true });\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    const component: AppComponent = this;\n    const render = (timestamp) => {\n      component.animate(timestamp);\n      component.renderer.render(component.scene, component.cameraControl.camera);\n      requestAnimationFrame(render);\n    };\n    requestAnimationFrame(render);\n  }\n\n  onKeyUp(k: string) {\n    console.log(`Key is ${k}`);\n  }\n\n  onScroll(event: WheelEvent) {\n    if (event.movementY) {\n      this.cameraControl.zoom(event.deltaY * 0.2);\n    }\n  }\n\n  getAspectRatio(): number { return window.innerWidth / window.innerHeight; }\n\n  /**\n   * Fix view when browser window size changes\n   */\n  onWindowResize(_: Event) {\n    this.cameraControl.camera.aspect = this.getAspectRatio();\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.cameraControl.updateCamera();\n  }\n\n  openFullscreen() {\n    if (this.canvasRef.nativeElement.requestFullscreen) {\n      this.canvasRef.nativeElement.requestFullscreen();\n    } else if (this.canvasRef.nativeElement.mozRequestFullScreen) { /* Firefox */\n      this.canvasRef.nativeElement.mozRequestFullScreen();\n    } else if (this.canvasRef.nativeElement.webkitRequestFullscreen) { /* Chrome, Safari & Opera */\n      this.canvasRef.nativeElement.webkitRequestFullscreen();\n    } else if (this.canvasRef.nativeElement.msRequestFullscreen) { /* IE/Edge */\n      this.canvasRef.nativeElement.msRequestFullscreen();\n    }\n    this.canvasRef.nativeElement.style.width = '100%';\n    this.canvasRef.nativeElement.style.height = '100%';\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PlantSeedMenuComponent } from './plant-seed-menu/plant-seed-menu.component';\nimport { TileDetailComponent } from './tile-detail/tile-detail.component';\nimport { MenuConstructComponent } from './menu-construct/menu-construct.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    PlantSeedMenuComponent,\n    TileDetailComponent,\n    MenuConstructComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { PerspectiveCamera } from 'three';\n\nexport class CameraControler {\n\n    constructor(public camera: PerspectiveCamera) {\n        this.setCamera('bird');\n    }\n\n    setCamera(pos: 'bird' | 'ground') {\n        if (pos === 'bird') {\n            this.camera.position.z = 30;\n            this.camera.position.y = -40;\n            this.camera.position.x = 0;\n            this.camera.rotation.x = 1.0;\n        } else if (pos === 'ground') {\n            this.camera.position.z = 0;\n            this.camera.position.y = -14;\n            this.camera.rotation.x = Math.PI / 2;\n        }\n    }\n\n    zoom(deltaZoom: number): string {\n        const maxFOV = 40;\n        const minFOV = 10;\n        const newFOV = this.camera.fov + (deltaZoom * 0.2);\n        if (newFOV > maxFOV) {\n            this.camera.fov = maxFOV;\n        } else if (newFOV < minFOV) {\n            this.camera.fov = minFOV;\n        } else {\n            this.camera.fov = newFOV;\n        }\n        this.camera.updateProjectionMatrix();\n        return this.camera.fov.toString();\n    }\n\n    dolly(deltaX: number): string {\n        const maxX = 16;\n        const newX = this.camera.position.x + deltaX;\n        if (newX > maxX) {\n            this.camera.position.setX(maxX);\n        } else if (newX < -maxX) {\n            this.camera.position.setX(-maxX);\n        } else {\n            this.camera.position.setX(newX);\n        }\n        return newX.toString();\n    }\n\n    updateCamera(): void {\n        this.camera.updateProjectionMatrix();\n    }\n}\n","\nexport interface PointHandler {\n  onPress: (x: number, y: number) => boolean;\n}\n\nexport class InputHandler {\n\n  scaling = false;\n  lastDist = 0;\n  lastXCenter = 0;\n  lastYCenter = 0;\n\n\n  constructor(\n    public onPress: (x: number, y: number) => boolean,\n    public onHover: (x: number, y: number) => boolean,\n    public onPinch: (dp: number) => void,\n    public onDeltaX: (dx: number) => void) {\n  }\n\n  onMouseUp(e: MouseEvent) {\n    e.preventDefault();\n    this.scaling = false;\n  }\n\n  onMouseDown(e: MouseEvent) {\n    e.preventDefault();\n    if (!this.onPress(e.clientX, e.clientY)) {\n      // this.scaling = true;\n      // this.last_x_center = e.clientX;\n      // this.last_y_center = e.clientY;\n    }\n  }\n\n  onMouseMove(e: MouseEvent) {\n    e.preventDefault();\n    const xCenter = e.clientX;\n    const yCenter = e.clientY;\n    this.onHover(xCenter, yCenter);\n    if (this.scaling) {\n      // x 2 finger movement\n      const xCenterDelta = this.lastXCenter - xCenter;\n      this.onDeltaX(xCenterDelta * 0.1);\n      this.lastXCenter = xCenter;\n    }\n  }\n\n  onTouchStart(e: TouchEvent) {\n    e.preventDefault();\n    // If no collision events\n    let hadEvent = false;\n    for (let i = 0; i < e.touches.length; i++) {\n      if (this.onPress(e.touches[0].pageX, e.touches[0].pageY)) {\n        hadEvent = true;\n      }\n    }\n\n    if (!hadEvent) {\n      this.scaling = true;\n      if (e.touches.length === 1) { // Selection\n        this.lastXCenter = e.touches[0].pageX;\n        this.lastYCenter = e.touches[0].pageY;\n      } else if (e.touches.length === 2) { // Cameracontrol\n        this.lastDist = Math.hypot(e.touches[0].pageX - e.touches[1].pageX, e.touches[0].pageY - e.touches[1].pageY);\n        this.lastXCenter = (e.touches[0].pageX - e.touches[1].pageX) / 2;\n        this.lastYCenter = (e.touches[0].pageY - e.touches[1].pageY) / 2;\n      }\n    }\n  }\n\n  onTouchMove(e: TouchEvent) {\n    if (this.scaling) {\n      let xCenter = 0;\n      if (e.touches.length === 1) {\n        xCenter = e.touches[0].pageX;\n      } else if (e.touches.length === 2) {\n        xCenter = (e.touches[0].pageX + e.touches[1].pageX) / 2;\n        // Pinch Zoom\n        const dist = Math.hypot(e.touches[0].pageX - e.touches[1].pageX, e.touches[0].pageY - e.touches[1].pageY);\n        const distanceDelta = this.lastDist - dist;\n        this.onPinch(distanceDelta);\n        this.lastDist = dist;\n      }\n      // x 2 finger movement\n      const xCenterDelta = this.lastXCenter - xCenter;\n      this.onDeltaX(xCenterDelta);\n      this.lastXCenter = xCenter;\n    }\n  }\n\n  onTouchEnd(e: TouchEvent) {\n    e.preventDefault();\n    if (this.scaling) { this.scaling = false; }\n  }\n}\n","import { isNullOrUndefined } from 'util';\nimport { Raycaster, Vector2, Mesh } from 'three';\nimport { Camera } from 'three';\nimport { Entity } from './entity/Entity';\n\nexport class MeshEvent {\n  constructor(public type: 'up' | 'move' | 'down',\n              public mesh: Mesh,\n              public callback: (t: Entity) => void\n  ) {\n  }\n}\n\n/**\n * Event handler for mouse interaction with ThreeJS mesh geometry.\n */\nexport class MeshInteraction {\n  // Collision Detection\n  private raycaster: Raycaster = new Raycaster();\n  private mouse: Vector2 = new Vector2();\n  private eventMeshes: Mesh[] = [];\n\n\n  constructor(\n      public clientWidth: number,\n      public clientHeight: number,\n      public camera: Camera\n      ) {\n  }\n\n  registerEvent(me: MeshEvent) {\n    me.mesh[me.type] = me.callback;\n    this.eventMeshes.push(me.mesh);\n  }\n\n  handlePointer(x: number, y: number, callback: 'up' | 'down' | 'move'): boolean {\n    this.mouse.x = (x / this.clientWidth) * 2 - 1;\n    this.mouse.y = - (y / this.clientHeight) * 2 + 1;\n    this.raycaster.setFromCamera(this.mouse, this.camera);\n    const intersects = this.raycaster.intersectObjects(this.eventMeshes);\n    if (intersects.length > 0) {\n      try {\n        if (!isNullOrUndefined(intersects[0])) { intersects[0].object[callback](); }\n      } catch (err) {\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","import { WorldData } from '../data/DataWorld';\nimport { Color } from 'three';\nimport { AppComponent } from '../../app.component';\n\nconst colorsNone: Color[] = [new Color(0x444444), new Color(0x888888)];\n\n/**\n * Action result data and the updated terrain\n */\nexport class ActionResult {\n    constructor(\n        public tid: number,\n        public world: WorldData,\n        public actionLabel: string,\n        public success: boolean) { }\n}\n\n/**\n * Provides base behavior for tile actions\n */\nexport abstract class ActionBase {\n    abstract actionName: string; // Printable Name\n    abstract colors: Color[]; // Selector colors\n\n    // Checks if action can be performed on the desired terrain\n    abstract isActionAllowed(tid: number, world: WorldData): boolean;\n    // Called if action succeeds, apply changes to terrain data\n    protected abstract onActionSuccess(tid: number, world: WorldData): void;\n    // Called automatically when an action result is received\n    protected abstract onUpdateUI(result: ActionResult, ui: AppComponent): void;\n\n    updateUI(result: ActionResult, ui: AppComponent): void {\n        ui.labelMoney = result.world.money;\n        if (result.success) {\n            this.onUpdateUI(result, ui);\n        }\n    }\n\n    /**\n     * Update UI to show interactions for selected action\n     */\n    onActionSelectUI(world: WorldData, ui: AppComponent): void {\n        world.terrain.forEach((dt, index) => {\n            const entity = ui.entityGrid.tiles.get(index);\n            const allowed = this.isActionAllowed(index, world);\n            const colors = this.colors;\n            entity.setSelect(allowed, colors);\n        });\n    }\n\n    performAction(tid: number, world: WorldData): ActionResult {\n        const actionAllowed = this.isActionAllowed(tid, world);\n        // console.log(`Performing Action ${Action[act]} on tile # ${terrain.index}`);\n        if (actionAllowed) {\n            this.onActionSuccess(tid, world);\n        }\n        return new ActionResult(tid, world, this.actionName, actionAllowed);\n    }\n}\n\nexport class ActionNone extends ActionBase {\n    actionName = 'None';\n    colors = colorsNone;\n    protected onUpdateUI(result: ActionResult, ui: AppComponent): void {\n    }\n    isActionAllowed(tid: number, world: WorldData): boolean {\n        return false;\n    }\n    onActionSuccess(tid: number, world: WorldData): void {\n    }\n}\n\nexport class ActionTimestep extends ActionBase {\n    actionName = 'UpdateTimestep';\n    colors = colorsNone;\n    isActionAllowed(tid: number, world: WorldData): boolean {\n        return true;\n    }\n    protected onActionSuccess(tid: number, world: WorldData): void {\n        world.terrain.get(tid).onUpdate();\n    }\n    protected onUpdateUI(result: ActionResult, ui: AppComponent): void {\n        console.log(`${this.actionName}: onUpdateUI`);\n    }\n\n}\n","import { ActionBase, ActionResult } from './Action';\nimport { AppComponent } from '../../app.component';\nimport { tileFactory } from '../entity/EntityTileFactory';\nimport { WorldData } from '../data/DataWorld';\nimport { TerrainEmpty, TerrainTank, Terrain, TerrainFarm } from '../data/DataTerrain';\nimport { Color } from 'three';\n\nconst colorsConstruct: Color[] = [new Color('orange'), new Color('yellow')];\n\nfunction isConstructAllowed(tid: number, world: WorldData) {\n    return world.terrain.get(tid) instanceof TerrainEmpty;\n}\n\nexport class ConstructOption {\n    constructor(public name: string,\n                public cost: number,\n                public getTerrain: () => Terrain) {\n    }\n}\n\n// Authoritive list of builds\nconst buildFarm = new ConstructOption('Farm', 10, () => new TerrainFarm());\nconst buildTank = new ConstructOption('Tank', 15, () => new TerrainTank());\nexport const buildList = [buildFarm, buildTank];\n\nexport class ActionConstruct extends ActionBase {\n    actionName = 'Construct';\n    colors = colorsConstruct;\n\n    private constructOption: ConstructOption;\n    constructor(public buildID: number) {\n        super();\n        this.constructOption = buildList[buildID];\n    }\n\n    protected onUpdateUI(result: ActionResult, ui: AppComponent): void {\n        const newTile = tileFactory(result.world.terrain.get(result.tid));\n        ui.entityGrid.setTile(result.tid, newTile);\n        ui.entityGrid.tiles.get(result.tid).onConstruct();\n        ui.constructTargetID = undefined;\n    }\n    isActionAllowed(tid: number, world: WorldData): boolean {\n        const canAfford = world.money >= this.constructOption.cost;\n        return isConstructAllowed(tid, world) && canAfford;\n    }\n    protected onActionSuccess(tid: number, world: WorldData): void {\n        world.terrain.set(tid, this.constructOption.getTerrain());\n        world.money -= this.constructOption.cost;\n    }\n}\n\nexport class ActionConstructTargetPlot extends ActionBase {\n    actionName = 'TargetTileConstruction';\n    colors = colorsConstruct;\n    isActionAllowed(tid: number, world: WorldData): boolean {\n        return isConstructAllowed(tid, world);\n    }\n    protected onActionSuccess(tid: number, world: WorldData): void {\n        // No changes, modifies UI state\n    }\n    protected onUpdateUI(result: ActionResult, ui: AppComponent): void {\n        if (result.success) {\n            ui.constructTargetID = result.tid;\n            // Updateselection\n            ui.entityGrid.tiles.forEach((tile, index) => {\n                tile.setSelect(index === result.tid, this.colors);\n            });\n        }\n    }\n\n}\n","import { WorldData } from '../data/DataWorld';\nimport { AppComponent } from '../../app.component';\nimport { TerrainEmpty } from '../data/DataTerrain';\nimport { tileFactory } from '../entity/EntityTileFactory';\nimport { ActionBase, ActionResult } from './Action';\nimport { Color } from 'three';\n\nconst colorsDemolish = [new Color(0x9D00DD), new Color(0xBF00FF)];\n\nexport class ActionDemolish extends ActionBase {\n    actionName = 'Demolish';\n    colors = colorsDemolish;\n    protected onUpdateUI(result: ActionResult, ui: AppComponent): void {\n        const newTile = tileFactory(result.world.terrain.get(result.tid));\n        ui.entityGrid.setTile(result.tid, newTile);\n    }\n    isActionAllowed(tid: number, world: WorldData): boolean {\n        return !(world.terrain.get(tid) instanceof TerrainEmpty);\n    }\n    onActionSuccess(tid: number, world: WorldData): void {\n        world.terrain.set(tid, new TerrainEmpty());\n    }\n}\n","import { WorldData } from '../data/DataWorld';\nimport { AppComponent } from '../../app.component';\nimport { TerrainFarm } from '../data/DataTerrain';\nimport { EntityTileFarm } from '../entity/EntityTileFarm';\nimport { ActionBase, ActionResult } from './Action';\nimport { Color } from 'three';\n\nconst colorsHarvest: Color[] = [new Color(0xbc5a45), new Color(0xf18973)];\n\nexport class ActionHarvest extends ActionBase {\n    actionName = 'Harvest';\n    colors = colorsHarvest;\n    protected onUpdateUI(result: ActionResult, ui: AppComponent): void {\n        ui.entityGrid.tiles.get(result.tid).meshSelect.visible = false;\n        const tile = ui.entityGrid.tiles.get(result.tid);\n        if (tile instanceof EntityTileFarm && (tile.entityPlant !== undefined)) {\n            tile.entityPlant.onHarvest();\n        }\n    }\n    isActionAllowed(tid: number, world: WorldData): boolean {\n        const dt = world.terrain.get(tid);\n        if (dt instanceof TerrainFarm) {\n            return dt.plant !== undefined;\n        }\n        return false;\n    }\n    onActionSuccess(tid: number, world: WorldData): void {\n        const dt = world.terrain.get(tid);\n        if (dt instanceof TerrainFarm) {\n            const value = dt.plant.seed.value;\n            delete dt.plant;\n            world.money += value;\n        }\n    }\n}\n","import { WorldData } from '../data/DataWorld';\nimport { AppComponent } from '../../app.component';\nimport { ActionBase, ActionResult } from './Action';\nimport { Color } from 'three';\n\nconst colorsInfo: Color[] = [new Color(0x0000AA), new Color(0x0000FF)];\nconst colorsInfoSelect: Color[] = [new Color(0xff9999), new Color(0xff9999)];\n\nexport class ActionInfo extends ActionBase {\n    actionName = 'Info';\n    colors = colorsInfo;\n    protected onUpdateUI(result: ActionResult, ui: AppComponent): void {\n        ui.infoTerrain = result.world.terrain.get(result.tid);\n        result.world.terrain.forEach((dt, index) => {\n            const entity = ui.entityGrid.tiles.get(index);\n            const allowed = index !== result.tid;\n            if (allowed) {\n                entity.setSelect(true, this.colors);\n            } else {\n                entity.setSelect(true, colorsInfoSelect);\n            }\n        });\n    }\n    isActionAllowed(tid: number, world: WorldData): boolean {\n        return true;\n    }\n    onActionSuccess(tid: number, world: WorldData): void {\n    }\n}\n","import { WorldData } from '../data/DataWorld';\nimport { TerrainFarm } from '../data/DataTerrain';\nimport { ActionBase, ActionResult } from './Action';\nimport { AppComponent } from '../../app.component';\nimport { EntityTileFarm } from '../entity/EntityTileFarm';\nimport { Plant } from '../data/DataPlant';\nimport { Color } from 'three';\n\nconst colorsPlant: Color[] = [new Color(0x008800), new Color(0x00BB33)];\n\nfunction isPlantAllowed(tid: number, world: WorldData) {\n    const dt = world.terrain.get(tid);\n    if (dt instanceof TerrainFarm) {\n        return dt.plant === undefined;\n    }\n    return false;\n}\n\nexport class ActionPlant extends ActionBase {\n    actionName = 'Plant';\n    colors = colorsPlant;\n    constructor(public targetSeedID: number) {\n        super();\n    }\n\n    protected onUpdateUI(result: ActionResult, ui: AppComponent): void {\n        const tile = ui.entityGrid.tiles.get(result.tid);\n        const dt = result.world.terrain.get(result.tid);\n        tile.meshSelect.visible = false;\n        if (dt instanceof TerrainFarm && tile instanceof EntityTileFarm) {\n            tile.setPlant(dt.plant);\n        }\n        ui.plantTargetID = undefined;\n    }\n\n    isActionAllowed(tid: number, world: WorldData): boolean {\n        const validSeed = world.seeds[this.targetSeedID] !== undefined;\n        return isPlantAllowed(tid, world) && validSeed;\n    }\n    onActionSuccess(tid: number, world: WorldData): void {\n        const targetSeed = world.seeds[this.targetSeedID];\n        const dt = world.terrain.get(tid);\n        if (dt instanceof TerrainFarm) {\n            dt.plant = new Plant(targetSeed);\n        }\n        // Remove seed from inventory\n        world.seeds = world.seeds.filter(seed => seed !== targetSeed);\n    }\n}\n\nexport class ActionPlantTargetPlot extends ActionBase {\n    actionName = 'TargetPlotToPlant';\n    colors = colorsPlant;\n    isActionAllowed(tid: number, world: WorldData): boolean {\n        return isPlantAllowed(tid, world);\n    }\n    protected onActionSuccess(tid: number, world: WorldData): void {\n        // No changes, this action only modifies UI state\n    }\n    protected onUpdateUI(result: ActionResult, ui: AppComponent): void {\n        if (result.success) {\n            ui.plantTargetID = result.tid;\n            ui.seedList = result.world.seeds;\n            // Update selection\n            ui.entityGrid.tiles.forEach((tile, index) => {\n                tile.setSelect(index === result.tid, this.colors);\n            });\n        }\n    }\n}\n","\nexport class DataSeed {\n    constructor(\n        public name: string,\n        public value: number,\n        public color: number,\n        public width: number,\n        public height: number\n    ) {\n    }\n}\n\nexport function randomSeed(): DataSeed {\n    const value = 20 * Math.random();\n    const color = Math.floor(Math.random() * 16777215);\n    const width = Math.random();\n    const height = Math.random();\n    return new DataSeed('Random Seed', value, color, width, height);\n}\n\nexport class Plant {\n    public age = 0;\n    constructor(public seed: DataSeed) {\n    }\n\n    update(): void {\n        this.age += 1;\n    }\n}\n","import { Plant } from './DataPlant';\n\nexport abstract class Terrain {\n    public abstract getName(): string;\n    /**\n     * Update state for 1 game tick\n     */\n    public abstract onUpdate(): void;\n}\n\nexport class TerrainEmpty extends Terrain {\n    public onUpdate(): void {\n    }\n    public getName(): string {\n        return 'Empty Tile';\n    }\n}\n\nexport class TerrainFarm extends Terrain {\n    plant?: Plant;\n    public onUpdate(): void {\n        if (this.plant !== undefined) {\n            this.plant.update();\n        }\n    }\n    public getName(): string {\n        return 'Farmland';\n    }\n}\n\n\nexport class TerrainTank extends Terrain {\n    public waterCapacity = 100;\n\n    public getName(): string {\n        return 'Water Tank';\n    }\n    public onUpdate(): void {\n    }\n}\n","import { Plant, randomSeed, DataSeed } from './DataPlant';\nimport { TerrainEmpty, TerrainFarm, Terrain } from './DataTerrain';\n\n/**\n * Manages farm grid state\n */\nexport class WorldData {\n    constructor(public name: string,\n                public sizeX: number,\n                public sizeY: number,\n                public terrain: Map<number, Terrain>,\n                public money: number,\n                public seeds: DataSeed[]) {\n    }\n}\n\n\nexport function getRandomWorld(name: string, sizeX: number, sizeY: number, money: number): WorldData {\n    // Add random terrain\n    const tiles: Map<number, Terrain> = new Map();\n    for (let i = 0; i < sizeX * sizeY; i++) {\n        if (Math.random() > 0.7) {\n            const farm = new TerrainFarm();\n            if (Math.random() > 0.5) {\n                farm.plant = new Plant(randomSeed());\n            }\n            tiles.set(i, farm);\n        } else {\n            tiles.set(i, new TerrainEmpty());\n        }\n    }\n    // Add Seeds\n    const seedCount = Math.floor(3 + Math.random() * 5);\n    const seedList: DataSeed[] = [];\n    for (let i = 0; i < seedCount; i++) {\n        seedList.push(randomSeed());\n    }\n    return new WorldData(name, sizeX, sizeY, tiles, money, seedList);\n}\n\n","import { Texture, TextureLoader, NearestFilter, LinearMipMapLinearFilter, RepeatWrapping } from 'three';\n\n// Setup Texture Loader\nconst textureLoader = new TextureLoader();\ntextureLoader.setPath('assets/img/');\n\nexport function loadTexture(name: string): Texture {\n    const texture = textureLoader.load(name + '.png');\n    texture.magFilter = NearestFilter;\n    texture.minFilter = LinearMipMapLinearFilter;\n    return texture;\n}\n\nexport function loadTextureRepeating(name: string, x: number, y: number): Texture {\n    const texture = loadTexture(name);\n    texture.wrapS = RepeatWrapping;\n    texture.wrapT = RepeatWrapping;\n    texture.repeat.set(x, y);\n    return texture;\n}\n\n/**\n * Base class for entities\n */\nexport abstract class Entity {\n    abstract dispose(): void;\n    abstract animate(deltaTime: number): void;\n}\n\n// Constants\nexport const TILESIZE = 4;\n","import { Geometry, Mesh, AnimationMixer, BoxGeometry, AnimationAction,\n    LoopOnce, MeshLambertMaterial, Material, NumberKeyframeTrack,\n    VectorKeyframeTrack, InterpolateSmooth, BooleanKeyframeTrack, AnimationClip, InterpolateLinear } from 'three';\nimport { TILESIZE, Entity, loadTexture } from './Entity';\nimport { Plant } from '../data/DataPlant';\n\n// Harvest Animation\nconst harvestOpacityKF = new NumberKeyframeTrack('.material.opacity', [0, 1], [1, 0]);\nconst harvestPositionKF = new VectorKeyframeTrack('.position', [0, 1], [0, 0, 1, 0, 0, 5], InterpolateSmooth);\nconst harvestVisibleKF = new BooleanKeyframeTrack('.visible', [0, 1], [true, false]);\nconst ANIMATE_HARVEST = new AnimationClip('Harvest', -1, [harvestOpacityKF, harvestVisibleKF, harvestPositionKF]);\n\n// Grow Animation\nconst growPositionKF = new VectorKeyframeTrack('.position', [0, 1], [0, 0, -0.5, 0, 0, 1], InterpolateLinear);\nconst growScaleKF = new VectorKeyframeTrack('.scale', [0, 2], [0.1, 0.1, 0.1, 1, 1, 1], InterpolateSmooth);\nconst ANIMATE_GROW = new AnimationClip('Grow', -1, [growPositionKF, growScaleKF]);\n\nconst texturePlant = loadTexture('white_wool');\n\nexport class EntityPlant extends Entity {\n    private matPlant: Material;\n    private geoPlant: Geometry;\n    private plantMixer: AnimationMixer;\n    public meshPlant: Mesh;\n    constructor(plant: Plant) {\n        super();\n        this.matPlant = new MeshLambertMaterial({ map: texturePlant, transparent: true, color: plant.seed.color });\n        const width = TILESIZE * 0.2 + (plant.seed.width * 2);\n        this.geoPlant = new BoxGeometry(width, width, TILESIZE * 0.75 + (plant.seed.height * 3));\n        this.meshPlant = new Mesh(this.geoPlant, this.matPlant);\n        this.plantMixer = new AnimationMixer(this.meshPlant);\n    }\n    onGrow() {\n        this.meshPlant.scale.setScalar(0.00001);\n        const growAnimation: AnimationAction = this.plantMixer.clipAction(ANIMATE_GROW);\n        growAnimation.setLoop(LoopOnce, 1);\n        growAnimation.clampWhenFinished = true;\n        growAnimation.reset().play();\n    }\n    onHarvest() {\n        const harvestAnimation = this.plantMixer.clipAction(ANIMATE_HARVEST);\n        harvestAnimation.setLoop(LoopOnce, 1);\n        harvestAnimation.clampWhenFinished = true;\n        harvestAnimation.play();\n    }\n    dispose(): void {\n        this.matPlant.dispose();\n        this.geoPlant.dispose();\n    }\n    animate(deltaTime: number): void {\n        this.plantMixer.update(deltaTime);\n    }\n}\n","import { Entity, loadTextureRepeating, TILESIZE } from './Entity';\nimport { Mesh, Geometry, BoxGeometry, Texture, Material, Object3D } from 'three';\nimport { EntityTile } from './EntityTile';\nimport { Terrain } from '../data/DataTerrain';\nimport { tileFactory } from './EntityTileFactory';\nimport { MeshLambertMaterial } from 'three';\n\nexport class EntityGrid extends Entity {\n  // Resources\n  floorTexture: Texture;\n  floorGeometry: Geometry;\n  floorMaterial: Material;\n\n  gridModel: Object3D = new Object3D();\n  floorMesh: Mesh;\n  public tiles: Map<number, EntityTile> = new Map();\n\n  constructor(terrainMap: Map<number, Terrain>, public sizeX: number, public sizeY: number) {\n    super();\n    // Three Resources\n    this.floorTexture = loadTextureRepeating('gray_concrete_powder', sizeX, sizeY);\n    this.floorMaterial = new MeshLambertMaterial({ map: this.floorTexture });\n    this.floorGeometry = new BoxGeometry(sizeX * TILESIZE, sizeY * TILESIZE, 1);\n\n    // Setup Floor\n    this.floorMesh = new Mesh(this.floorGeometry, this.floorMaterial);\n    this.gridModel.add(this.floorMesh);\n\n    terrainMap.forEach((terrain, index) => {\n      this.setTile(index, tileFactory(terrain));\n    });\n  }\n\n  setTile(index: number, newTile: EntityTile) {\n    // Remove old tile if exists\n    if (this.tiles.has(index)) {\n      const oldTile = this.tiles.get(index);\n      this.gridModel.remove(oldTile.tileModel);\n      oldTile.dispose();\n    }\n    // Add new tile\n    const xPos = ((index % this.sizeX) * TILESIZE) - (TILESIZE * this.sizeX / 2) + TILESIZE * 0.5;\n    const yPos = (Math.floor(index / this.sizeY) * TILESIZE) - (TILESIZE * this.sizeY / 2) + TILESIZE * 0.5;\n    newTile.tileModel.position.set(xPos, yPos, 0.5);\n    this.gridModel.add(newTile.tileModel);\n    this.tiles.set(index, newTile);\n  }\n\n  animate(deltaTime: number): void {\n    this.tiles.forEach(e => e.animate(deltaTime));\n  }\n\n  dispose(): void {\n    this.tiles.forEach(e => e.dispose());\n    this.floorTexture.dispose();\n    this.floorMaterial.dispose();\n    this.floorGeometry.dispose();\n  }\n}\n","import { MeshBasicMaterial, Mesh, Object3D, AnimationMixer,\n    Color, BoxBufferGeometry, AnimationAction, VectorKeyframeTrack, AnimationClip, InterpolateSmooth, InterpolateLinear } from 'three';\nimport { Entity, TILESIZE } from './Entity';\n\nconst colorSelectDebug = new Color(0xffffff);\n\nconst selectGeometry = new BoxBufferGeometry(TILESIZE * 0.8, TILESIZE * 0.8, TILESIZE * 0.35);\n\nconst hoverScaleKF = new VectorKeyframeTrack('.scale', [0, 1, 2], [1, 1, 1, 1, 1, 1.5, 1, 1, 1], InterpolateSmooth);\nconst ANIMATE_HOVER = new AnimationClip('Hover', -1, [hoverScaleKF]);\n\n// Build Animation\nconst buildPositionKF = new VectorKeyframeTrack('.position', [0, 0.5], [0, 0, -0.5, 0, 0, 0], InterpolateLinear);\nexport const ANIMATE_BUILD = new AnimationClip('Build', -1, [buildPositionKF]);\n\n\nexport abstract class EntityTile extends Entity {\n    protected selectMat = new MeshBasicMaterial({ color: colorSelectDebug, opacity: 0.3, transparent: true });\n    public meshSelect: Mesh;\n    protected selectMixer: AnimationMixer;\n    protected selectAnimation: AnimationAction;\n    public tileModel: Object3D = new Object3D();\n\n    selectColors: Color[] = [colorSelectDebug, colorSelectDebug];\n\n    constructor() {\n        super();\n        this.meshSelect = new Mesh(selectGeometry, this.selectMat);\n        this.meshSelect.visible = false;\n        this.tileModel.add(this.meshSelect);\n        // Select Animation\n        this.selectMixer = new AnimationMixer(this.meshSelect);\n        this.selectAnimation = this.selectMixer.clipAction(ANIMATE_HOVER);\n        this.selectAnimation.clampWhenFinished = true;\n    }\n\n    setHovered(enabled: boolean) {\n        this.meshSelect.material['color'].set(this.selectColors[enabled ? 1 : 0]);\n    }\n\n    setSelect(enabled: boolean, colors: Color[]) {\n        this.meshSelect.visible = enabled;\n        this.selectColors = colors;\n        if (enabled) {\n            this.meshSelect.material['color'].set(colors[0]);\n            this.selectAnimation.play();\n        } else {\n            this.selectAnimation.stop();\n        }\n    }\n\n    abstract onConstruct(): void;\n\n    dispose(): void {\n        this.selectMat.dispose();\n        this.onDispose();\n    }\n    protected abstract onDispose(): void;\n\n    animate(deltaTime: number): void {\n        this.selectMixer.update(deltaTime);\n        this.onAnimate(deltaTime);\n    }\n    protected abstract onAnimate(deltaTime: number): void;\n}\n\nexport class EntityTileEmpty extends EntityTile {\n    onConstruct(): void {}\n    protected onAnimate(deltaTime: number): void {}\n    protected onDispose(): void {}\n}\n","import { TerrainFarm, Terrain, TerrainTank } from '../data/DataTerrain';\nimport { EntityTile, EntityTileEmpty } from './EntityTile';\nimport { EntityTileFarm } from './EntityTileFarm';\nimport { EntityTileTank } from './EntityTileTank';\n\nexport function tileFactory(terrain: Terrain): EntityTile {\n    if (terrain instanceof TerrainFarm) {\n        const tile = new EntityTileFarm(terrain);\n        if (terrain.plant !== undefined) {\n            tile.setPlant(terrain.plant);\n        }\n        return tile;\n    } else if (terrain instanceof TerrainTank) {\n        return new EntityTileTank();\n    } else {\n        return new EntityTileEmpty();\n    }\n}\n","import { EntityTile, ANIMATE_BUILD } from './EntityTile';\nimport { Mesh, AnimationMixer, LoopOnce, BoxBufferGeometry, MeshLambertMaterial } from 'three';\nimport { TILESIZE, loadTexture } from './Entity';\nimport { TerrainFarm } from '../data/DataTerrain';\nimport { Plant } from '../data/DataPlant';\nimport { EntityPlant } from './EntityPlant';\n\nconst buildingGeometry = new BoxBufferGeometry(TILESIZE * 0.75, TILESIZE * 0.75, TILESIZE * 0.25);\nconst textureBuilding = loadTexture('farmland_moist');\n\nexport class EntityTileFarm extends EntityTile {\n    // Three Resources\n    private buildingMat = new MeshLambertMaterial({ map: textureBuilding });\n    public meshBuilding: Mesh;\n    private buildMixer: AnimationMixer;\n    public entityPlant?: EntityPlant;\n\n    constructor(public terrain: TerrainFarm) {\n        super();\n        // Building Mesh\n        this.meshBuilding = new Mesh(buildingGeometry, this.buildingMat);\n        this.tileModel.add(this.meshBuilding);\n        this.buildMixer = new AnimationMixer(this.meshBuilding);\n        // Show Plants\n        if (terrain.plant !== undefined) {\n            this.setPlant(terrain.plant);\n        }\n    }\n\n    protected onAnimate(deltaTime: number): void {\n        if (this.entityPlant !== undefined) {\n            this.entityPlant.animate(deltaTime);\n        }\n        this.buildMixer.update(deltaTime);\n    }\n\n    onConstruct(): void {\n        this.meshBuilding.visible = true;\n        const buildAnimation = this.buildMixer.clipAction(ANIMATE_BUILD);\n        buildAnimation.setLoop(LoopOnce, 1);\n        buildAnimation.clampWhenFinished = true;\n        buildAnimation.play();\n    }\n\n    protected onDispose(): void {\n        this.removePlant();\n        this.buildingMat.dispose();\n    }\n\n    setPlant(plant: Plant) {\n        console.log('setting plant!');\n        this.removePlant();\n        this.entityPlant = new EntityPlant(plant);\n        this.tileModel.add(this.entityPlant.meshPlant);\n        this.entityPlant.onGrow();\n    }\n\n    // Remove plant and free resources\n    removePlant() {\n        if (this.entityPlant !== undefined) {\n            this.tileModel.remove(this.entityPlant.meshPlant);\n            this.entityPlant.dispose();\n            this.entityPlant = undefined;\n        }\n    }\n}\n","import { EntityTile, ANIMATE_BUILD } from './EntityTile';\nimport { CylinderBufferGeometry, Mesh, Color, MeshLambertMaterial, MeshPhongMaterial, LoopOnce } from 'three';\nimport { TILESIZE } from './Entity';\nimport { AnimationMixer } from 'three';\n\nconst colorTank = new Color(0x5555FF);\nconst colorTankEnd = new Color(0x444444);\n\nexport class EntityTileTank extends EntityTile {\n\n    // Tank Body\n    private matTank = new MeshLambertMaterial({ transparent: true, opacity: 0.7, color: colorTank });\n    private geoTank = new CylinderBufferGeometry(TILESIZE * 0.3, TILESIZE * 0.3, TILESIZE);\n    private meshTank = new Mesh(this.geoTank, this.matTank);\n    // Tank Ends\n    private geoTankEnd = new CylinderBufferGeometry(TILESIZE * 0.32, TILESIZE * 0.32, TILESIZE / 8, 10);\n    private matTankEnd = new MeshPhongMaterial({ color: colorTankEnd, reflectivity: 1, specular: 0xff0000, shininess: 100});\n    private meshBottom = new Mesh(this.geoTankEnd, this.matTankEnd);\n    private meshTop = new Mesh(this.geoTankEnd, this.matTankEnd);\n\n    private tankMixer: AnimationMixer;\n\n    constructor() {\n        super();\n        this.meshTank.rotateX(-Math.PI / 2);\n        this.meshTop.translateY(-TILESIZE / 2);\n        this.meshTank.add(this.meshTop);\n        this.meshTank.add(this.meshBottom);\n        // Add tank to tile base\n        this.tileModel.add(this.meshTank);\n        // Animation\n        this.tankMixer = new AnimationMixer(this.meshTank);\n    }\n\n    onConstruct(): void {\n        this.meshTank.visible = true;\n        const buildAnimation = this.tankMixer.clipAction(ANIMATE_BUILD);\n        buildAnimation.setLoop(LoopOnce, 1);\n        buildAnimation.clampWhenFinished = true;\n        buildAnimation.play();\n    }\n    onDispose(): void {\n        this.tileModel.remove(this.meshTank);\n        this.matTank.dispose();\n        this.geoTank.dispose();\n        this.matTankEnd.dispose();\n        this.geoTankEnd.dispose();\n    }\n\n    protected onAnimate(deltaTime: number): void {\n        this.tankMixer.update(deltaTime);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { WorldData, getRandomWorld } from './engine/data/DataWorld';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FarmService {\n  private world: WorldData;\n\n  constructor() {\n    this.world = getRandomWorld('World', 8, 8, 100);\n  }\n\n  getWorld(): Observable<WorldData> {\n    return of(this.world);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUtY29uc3RydWN0L21lbnUtY29uc3RydWN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"targetID !== undefined\\\" class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">Select Building for Tile {{targetID}}</h5>\\n        <table class=\\\"table table-dark table-sm\\\">\\n            <thead>\\n                <th scope=\\\"col\\\">Building</th>\\n                <th scope=\\\"col\\\">Cost</th>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let build of constructList; let i = index\\\">\\n                    <td>{{ build.name }}</td>\\n                    <td>{{ build.cost }}</td>\\n                    <td>\\n                        <button (click)=\\\"emitConstructID(i)\\\" class=\\\"btn btn-block btn-success\\\">\\n                            Construct\\n                        </button>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ConstructOption } from '../engine/action/ActionConstruct';\n\n@Component({\n  selector: 'app-menu-construct',\n  templateUrl: './menu-construct.component.html',\n  styleUrls: ['./menu-construct.component.css']\n})\nexport class MenuConstructComponent implements OnInit {\n  @Input() targetID: number;\n  @Input() constructList: ConstructOption[];\n  @Output() selectConstructID = new EventEmitter<number>();\n\n  emitConstructID(id: number) {\n    this.selectConstructID.emit(id);\n  }\n\n  constructor() {}\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BsYW50LXNlZWQtbWVudS9wbGFudC1zZWVkLW1lbnUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div *ngIf=\\\"plantTargetID !== undefined\\\" class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">Select seed for Tile {{plantTargetID}}</h5>\\n        <table class=\\\"table table-dark table-sm\\\">\\n            <thead>\\n                <th scope=\\\"col\\\">Name</th>\\n                <th scope=\\\"col\\\">Value</th>\\n                <th scope=\\\"col\\\">Width</th>\\n                <th scope=\\\"col\\\">Height</th>\\n            </thead>\\n            <tbody>\\n                <tr *ngFor=\\\"let seed of seedList; let i = index\\\">\\n                    <td>{{ seed.name }}</td>\\n                    <td>{{ seed.value.toFixed(2) }}</td>\\n                    <td>{{ seed.width.toFixed(2) }}</td>\\n                    <td>{{ seed.height.toFixed(2) }}</td>\\n                    <td>\\n                        <button (click)=\\\"pressPlant(i)\\\" class=\\\"btn btn-block btn-success\\\">Plant</button>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { DataSeed } from '../engine/data/DataPlant';\n\n@Component({\n  selector: 'app-plant-seed-menu',\n  templateUrl: './plant-seed-menu.component.html',\n  styleUrls: ['./plant-seed-menu.component.css']\n})\nexport class PlantSeedMenuComponent implements OnInit {\n\n  @Input() seedList: DataSeed[];\n  @Input() plantTargetID: number;\n  @Output() selectSeed = new EventEmitter<number>();\n\n  pressPlant(seedID: number) {\n    this.selectSeed.emit(seedID);\n  }\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RpbGUtZGV0YWlsL3RpbGUtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"terrain\\\" class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{terrain.getName()}}</h5>\\n        <div *ngIf=\\\"terrain.plant\\\">\\n            <p class=\\\"card-text\\\">Name: {{terrain.plant.seed.name}}</p>\\n            <p class=\\\"card-text\\\">Age: {{terrain.plant.age}}</p>\\n            <p class=\\\"card-text\\\">Value: {{terrain.plant.seed.value.toFixed(2)}}</p>\\n            <p class=\\\"card-text\\\">Width: {{terrain.plant.seed.width.toFixed(2)}}</p>\\n            <p class=\\\"card-text\\\">Height: {{terrain.plant.seed.height.toFixed(2)}}</p>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Terrain } from '../engine/data/DataTerrain';\n\n@Component({\n  selector: 'app-tile-detail',\n  templateUrl: './tile-detail.component.html',\n  styleUrls: ['./tile-detail.component.css']\n})\nexport class TileDetailComponent implements OnInit {\n\n  @Input() terrain: Terrain;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n.catch(err => console.error(err));\n"],"sourceRoot":""}